import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud


st.set_page_config(layout="wide")
st.title("ITViec Company Review Dashboard")

# ƒê·ªçc d·ªØ li·ªáu
df = pd.read_excel('Processed_reviews.xlsx')

tab1, tab2 = st.tabs(["üîç T√¨m review theo t·ª´ kh√≥a", "üè¢ T·ªïng quan c√¥ng ty"])

with tab1:
    st.header("1. T√¨m c√¥ng ty theo t·ª´ kh√≥a n·ªïi b·∫≠t")
    keyword = st.text_input("Nh·∫≠p t·ª´ kh√≥a b·∫°n quan t√¢m:")
    if keyword:
        temp_df = df.copy()
        # L·ªçc c√°c review ch·ª©a t·ª´ kh√≥a ·ªü 1 trong 2 c·ªôt
        mask = (
            temp_df["What I liked"].fillna("").str.contains(keyword, case=False, na=False) |
            temp_df["Suggestions for improvement"].fillna("").str.contains(keyword, case=False, na=False)
        )
        filtered = temp_df.loc[mask, ["Company Name", "What I liked", "Suggestions for improvement", "sentiment"]].dropna(how='all').head(10)
        if not filtered.empty:
            st.dataframe(filtered.rename(columns={
                "Company Name": "C√¥ng ty",
                "What I liked": "ƒêi·ªÅu t√¥i th√≠ch v·ªÅ c√¥ng ty n√†y",
                "Suggestions for improvement": "G√≥p √Ω kh·∫Øc ph·ª•c",
                "sentiment": "Lo·∫°i c·∫£m x√∫c"
            }))
        else:
            st.info("Kh√¥ng t√¨m th·∫•y c√¥ng ty c√≥ review ph√π h·ª£p v·ªõi t·ª´ kh√≥a.")

with tab2:
    st.header("2. T·ªïng quan & tr·ª±c quan h√≥a c√¥ng ty")
    company2 = st.selectbox("Ch·ªçn c√¥ng ty", df["Company Name"].dropna().unique(), key="company2")
    company_df = df[df["Company Name"] == company2]

    col1, col2 = st.columns(2)
    with col1:
        st.subheader("T·ªïng quan")
        st.write(f"S·ªë l∆∞·ª£t ƒë√°nh gi√°: **{len(company_df)}**")
        st.write(f"ƒêi·ªÉm trung b√¨nh: **{company_df['Rating'].mean():.2f}**")
        st.write("**Ph√¢n b·ªë c·∫£m x√∫c:**")
        sentiment_counts = company_df['sentiment'].value_counts()
        st.bar_chart(sentiment_counts)

        st.write("**Nh·∫≠n x√©t t√≠ch c·ª±c n·ªïi b·∫≠t:**")
        st.write(company_df[company_df["sentiment"] == "positive"]["What I liked"].dropna().head(3).tolist())
        st.write("**Nh·∫≠n x√©t ti√™u c·ª±c n·ªïi b·∫≠t:**")
        st.write(company_df[company_df["sentiment"] == "negative"]["Suggestions for improvement"].dropna().head(3).tolist())

    with col2:
        st.subheader("WordCloud t√≠ch c·ª±c")
        pos_text = " ".join(company_df[company_df['sentiment'] == 'positive']['liked_clean'].dropna())
        if pos_text:
            wc = WordCloud(width=400, height=200, background_color="white").generate(pos_text)
            fig, ax = plt.subplots(figsize=(6, 3))
            ax.imshow(wc, interpolation='bilinear')
            ax.axis("off")
            st.pyplot(fig)
        st.subheader("WordCloud ti√™u c·ª±c")
        neg_text = " ".join(company_df[company_df['sentiment'] == 'negative']['suggestion_clean'].dropna())
        if neg_text:
            wc = WordCloud(width=400, height=200, background_color="white").generate(neg_text)
            fig, ax = plt.subplots(figsize=(6, 3))
            ax.imshow(wc, interpolation='bilinear')
            ax.axis("off")
            st.pyplot(fig)

    # C·ª•m ph√π h·ª£p (n·∫øu c√≥ d·ªØ li·ªáu)
    if {'x', 'y', 'cluster'}.issubset(company_df.columns):
        st.subheader("Ph√¢n c·ª•m ƒë√°nh gi√° (KMeans)")
        fig, ax = plt.subplots(figsize=(6, 4))
        sns.scatterplot(data=company_df, x="x", y="y", hue="cluster", palette="Set2", ax=ax)
        st.pyplot(fig)
